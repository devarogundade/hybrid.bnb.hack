// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ApprovalRequested extends ethereum.Event {
  get params(): ApprovalRequested__Params {
    return new ApprovalRequested__Params(this);
  }
}

export class ApprovalRequested__Params {
  _event: ApprovalRequested;

  constructor(event: ApprovalRequested) {
    this._event = event;
  }

  get approvalId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get assetId(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ApprovalResult extends ethereum.Event {
  get params(): ApprovalResult__Params {
    return new ApprovalResult__Params(this);
  }
}

export class ApprovalResult__Params {
  _event: ApprovalResult;

  constructor(event: ApprovalResult) {
    this._event = event;
  }

  get approvalId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get Status(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class AssetDowngraded extends ethereum.Event {
  get params(): AssetDowngraded__Params {
    return new AssetDowngraded__Params(this);
  }
}

export class AssetDowngraded__Params {
  _event: AssetDowngraded;

  constructor(event: AssetDowngraded) {
    this._event = event;
  }

  get assetId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AssetUpgraded extends ethereum.Event {
  get params(): AssetUpgraded__Params {
    return new AssetUpgraded__Params(this);
  }
}

export class AssetUpgraded__Params {
  _event: AssetUpgraded;

  constructor(event: AssetUpgraded) {
    this._event = event;
  }

  get assetId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DowngradeRequested extends ethereum.Event {
  get params(): DowngradeRequested__Params {
    return new DowngradeRequested__Params(this);
  }
}

export class DowngradeRequested__Params {
  _event: DowngradeRequested;

  constructor(event: DowngradeRequested) {
    this._event = event;
  }

  get assetId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WalletBind extends ethereum.Event {
  get params(): WalletBind__Params {
    return new WalletBind__Params(this);
  }
}

export class WalletBind__Params {
  _event: WalletBind;

  constructor(event: WalletBind) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get signer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WalletUnBind extends ethereum.Event {
  get params(): WalletUnBind__Params {
    return new WalletUnBind__Params(this);
  }
}

export class WalletUnBind__Params {
  _event: WalletUnBind;

  constructor(event: WalletUnBind) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Hybrid__onValidApprovalResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSpender(): Address {
    return this.value0;
  }

  getValue(): BigInt {
    return this.value1;
  }
}

export class Hybrid extends ethereum.SmartContract {
  static bind(address: Address): Hybrid {
    return new Hybrid("Hybrid", address);
  }

  signerOf(owner: Address): Address {
    let result = super.call("signerOf", "signerOf(address):(address)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toAddress();
  }

  try_signerOf(owner: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("signerOf", "signerOf(address):(address)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  onRequestAprroval(owner: Address, spender: Address, value: BigInt): Bytes {
    let result = super.call(
      "onRequestAprroval",
      "onRequestAprroval(address,address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(value),
      ],
    );

    return result[0].toBytes();
  }

  try_onRequestAprroval(
    owner: Address,
    spender: Address,
    value: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onRequestAprroval",
      "onRequestAprroval(address,address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(value),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onValidApproval(
    messageHash: Bytes,
    v: i32,
    r: Bytes,
    s: Bytes,
    approvalId: Bytes,
  ): Hybrid__onValidApprovalResult {
    let result = super.call(
      "onValidApproval",
      "onValidApproval(bytes32,uint8,bytes32,bytes32,bytes32):(address,uint256)",
      [
        ethereum.Value.fromFixedBytes(messageHash),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s),
        ethereum.Value.fromFixedBytes(approvalId),
      ],
    );

    return new Hybrid__onValidApprovalResult(
      result[0].toAddress(),
      result[1].toBigInt(),
    );
  }

  try_onValidApproval(
    messageHash: Bytes,
    v: i32,
    r: Bytes,
    s: Bytes,
    approvalId: Bytes,
  ): ethereum.CallResult<Hybrid__onValidApprovalResult> {
    let result = super.tryCall(
      "onValidApproval",
      "onValidApproval(bytes32,uint8,bytes32,bytes32,bytes32):(address,uint256)",
      [
        ethereum.Value.fromFixedBytes(messageHash),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s),
        ethereum.Value.fromFixedBytes(approvalId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Hybrid__onValidApprovalResult(
        value[0].toAddress(),
        value[1].toBigInt(),
      ),
    );
  }

  isUpgraded(assetId: Address, owner: Address): boolean {
    let result = super.call(
      "isUpgraded",
      "isUpgraded(address,address):(bool)",
      [ethereum.Value.fromAddress(assetId), ethereum.Value.fromAddress(owner)],
    );

    return result[0].toBoolean();
  }

  try_isUpgraded(
    assetId: Address,
    owner: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isUpgraded",
      "isUpgraded(address,address):(bool)",
      [ethereum.Value.fromAddress(assetId), ethereum.Value.fromAddress(owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class OnRequestAprrovalCall extends ethereum.Call {
  get inputs(): OnRequestAprrovalCall__Inputs {
    return new OnRequestAprrovalCall__Inputs(this);
  }

  get outputs(): OnRequestAprrovalCall__Outputs {
    return new OnRequestAprrovalCall__Outputs(this);
  }
}

export class OnRequestAprrovalCall__Inputs {
  _call: OnRequestAprrovalCall;

  constructor(call: OnRequestAprrovalCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class OnRequestAprrovalCall__Outputs {
  _call: OnRequestAprrovalCall;

  constructor(call: OnRequestAprrovalCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnValidApprovalCall extends ethereum.Call {
  get inputs(): OnValidApprovalCall__Inputs {
    return new OnValidApprovalCall__Inputs(this);
  }

  get outputs(): OnValidApprovalCall__Outputs {
    return new OnValidApprovalCall__Outputs(this);
  }
}

export class OnValidApprovalCall__Inputs {
  _call: OnValidApprovalCall;

  constructor(call: OnValidApprovalCall) {
    this._call = call;
  }

  get messageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get v(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get approvalId(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnValidApprovalCall__Outputs {
  _call: OnValidApprovalCall;

  constructor(call: OnValidApprovalCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get value(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class OnRejectAprrovalCall extends ethereum.Call {
  get inputs(): OnRejectAprrovalCall__Inputs {
    return new OnRejectAprrovalCall__Inputs(this);
  }

  get outputs(): OnRejectAprrovalCall__Outputs {
    return new OnRejectAprrovalCall__Outputs(this);
  }
}

export class OnRejectAprrovalCall__Inputs {
  _call: OnRejectAprrovalCall;

  constructor(call: OnRejectAprrovalCall) {
    this._call = call;
  }

  get approvalId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class OnRejectAprrovalCall__Outputs {
  _call: OnRejectAprrovalCall;

  constructor(call: OnRejectAprrovalCall) {
    this._call = call;
  }
}

export class OnWalletBindCall extends ethereum.Call {
  get inputs(): OnWalletBindCall__Inputs {
    return new OnWalletBindCall__Inputs(this);
  }

  get outputs(): OnWalletBindCall__Outputs {
    return new OnWalletBindCall__Outputs(this);
  }
}

export class OnWalletBindCall__Inputs {
  _call: OnWalletBindCall;

  constructor(call: OnWalletBindCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get signer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class OnWalletBindCall__Outputs {
  _call: OnWalletBindCall;

  constructor(call: OnWalletBindCall) {
    this._call = call;
  }
}

export class OnWalletUnBindCall extends ethereum.Call {
  get inputs(): OnWalletUnBindCall__Inputs {
    return new OnWalletUnBindCall__Inputs(this);
  }

  get outputs(): OnWalletUnBindCall__Outputs {
    return new OnWalletUnBindCall__Outputs(this);
  }
}

export class OnWalletUnBindCall__Inputs {
  _call: OnWalletUnBindCall;

  constructor(call: OnWalletUnBindCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class OnWalletUnBindCall__Outputs {
  _call: OnWalletUnBindCall;

  constructor(call: OnWalletUnBindCall) {
    this._call = call;
  }
}

export class OnUpgradeAssetCall extends ethereum.Call {
  get inputs(): OnUpgradeAssetCall__Inputs {
    return new OnUpgradeAssetCall__Inputs(this);
  }

  get outputs(): OnUpgradeAssetCall__Outputs {
    return new OnUpgradeAssetCall__Outputs(this);
  }
}

export class OnUpgradeAssetCall__Inputs {
  _call: OnUpgradeAssetCall;

  constructor(call: OnUpgradeAssetCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class OnUpgradeAssetCall__Outputs {
  _call: OnUpgradeAssetCall;

  constructor(call: OnUpgradeAssetCall) {
    this._call = call;
  }
}

export class OnRequestDowngradeCall extends ethereum.Call {
  get inputs(): OnRequestDowngradeCall__Inputs {
    return new OnRequestDowngradeCall__Inputs(this);
  }

  get outputs(): OnRequestDowngradeCall__Outputs {
    return new OnRequestDowngradeCall__Outputs(this);
  }
}

export class OnRequestDowngradeCall__Inputs {
  _call: OnRequestDowngradeCall;

  constructor(call: OnRequestDowngradeCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class OnRequestDowngradeCall__Outputs {
  _call: OnRequestDowngradeCall;

  constructor(call: OnRequestDowngradeCall) {
    this._call = call;
  }
}

export class OnDowngradeAssetCall extends ethereum.Call {
  get inputs(): OnDowngradeAssetCall__Inputs {
    return new OnDowngradeAssetCall__Inputs(this);
  }

  get outputs(): OnDowngradeAssetCall__Outputs {
    return new OnDowngradeAssetCall__Outputs(this);
  }
}

export class OnDowngradeAssetCall__Inputs {
  _call: OnDowngradeAssetCall;

  constructor(call: OnDowngradeAssetCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class OnDowngradeAssetCall__Outputs {
  _call: OnDowngradeAssetCall;

  constructor(call: OnDowngradeAssetCall) {
    this._call = call;
  }
}
